AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sample-sam-app

  Sample SAM Template for sample-sam-app

Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  # DynamoDB: UserMessage table
  UserMessageTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: seq
          AttributeType: N
      KeySchema:
        - AttributeName: seq
          KeyType: HASH
      TableName: UserMessage
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  # DynamoDB: Member table
  MemberTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: seq
          AttributeType: N
      KeySchema:
        - AttributeName: seq
          KeyType: HASH
      TableName: Member
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  # Lambda: HelloWorldFunction
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: function/
      Handler: hello_world.lambda_handler
      Runtime: python3.9
      Role: arn:aws:iam::000000000000:role/lambda-role
      Architectures:
        - x86_64

  # Lambda: SimpleResponseFunction
  SimpleResponseFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: function/
      Handler: simple_response.lambda_handler
      Runtime: python3.9
      Role: arn:aws:iam::000000000000:role/lambda-role
      Architectures:
        - x86_64

  # Lambda: SimpleDynamodbFunction
  SimpleDynamodbFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: function/
      Handler: simple_dynamodb.lambda_handler
      Runtime: python3.9
      Role: arn:aws:iam::000000000000:role/lambda-role
      Architectures:
        - x86_64

  # Lambda: WorkWithOtherFunction
  WorkWithOtherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: function/
      Handler: work_with_other.lambda_handler
      Runtime: python3.9
      Role: arn:aws:iam::000000000000:role/lambda-role
      Architectures:
        - x86_64
      Events:
        WorkWithOther:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt MemberTable.StreamArn
            StartingPosition: LATEST
            Enabled: true
